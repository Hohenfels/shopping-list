{"version":3,"sources":["components/App.js","index.js"],"names":["App","savedShoppingList","localStorage","getItem","useState","JSON","parse","items","setItems","inputValue","setInputValue","useEffect","document","title","setItem","stringify","total","reduce","acc","item","quantity","handleNewItems","find","itemName","alert","newItem","isSelected","handleItemQuantity","index","increase","newItems","itemsWithoutCurrentIndex","filter","className","onChange","event","target","value","onKeyPress","key","handleKeyEvent","placeholder","maxLength","onClick","icon","faPlus","map","toggleSelected","faCheckCircle","faCircle","faChevronLeft","faChevronRight","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAoIeA,EAzHH,WACV,IAAMC,EAAoBC,aAAaC,QAAQ,gBAC/C,EAA0BC,mBACxBH,EAAoBI,KAAKC,MAAML,GAAqB,IADtD,mBAAOM,EAAP,KAAcC,EAAd,KAIA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,SAASC,MAAQ,mBACjBX,aAAaY,QAAQ,eAAgBT,KAAKU,UAAUR,OAGtD,IAAMS,EAAQT,EAAMU,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKC,WAAU,GAEzDC,EAAiB,WACrB,GAAIZ,EACF,GAAKF,EAAMe,MAAK,qBAAGC,WAA4Bd,KAQ7Ce,MAAM,+DARoD,CAC1D,IAAMC,EAAU,CACdF,SAAUd,EACViB,YAAY,EACZN,SAAU,GAEZZ,EAAS,GAAD,mBAAKD,GAAL,CAAYkB,OAuBpBE,EAAqB,SAACC,GAA4B,IAArBC,IAAoB,yDAC/CC,EAAQ,YAAOvB,GAErB,GAAKsB,EAYHC,EAASF,GAAOR,eAZH,CACb,GAAIU,EAASF,GAAOR,SAAW,GAAK,EAAG,CACrC,IAAMW,EAA2BxB,EAAMyB,QACrC,SAACb,GAAD,OAAUA,EAAKI,WAAaO,EAASF,GAAOL,YAI9C,YADAf,EAASuB,GAGTD,EAASF,GAAOR,WAKpBZ,EAASsB,IAGX,OACE,qBAAKG,UAAU,iBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,uBACEC,SAAU,SAACC,GAAD,OAAWzB,EAAcyB,EAAMC,OAAOC,QAChDC,WAAY,SAACH,GAAD,OA1CC,SAACA,GACJ,UAAdA,EAAMI,KACRlB,IAwC6BmB,CAAeL,IACtCF,UAAU,iBACVQ,YAAY,iBACZC,UAAU,OAEZ,wBAAQC,QAAStB,EAAjB,SACE,cAAC,IAAD,CAAiBuB,KAAMC,WAG3B,qBAAKZ,UAAU,YAAf,SACG1B,EAAMuC,KAAI,SAAC3B,EAAMS,GAAP,OACT,sBAAuCK,UAAU,iBAAjD,UACE,qBAAKA,UAAU,YAAYU,QAAS,kBAhDzB,SAACf,GACtB,IAAME,EAAQ,YAAOvB,GAErBuB,EAASF,GAAOF,WACXI,EAASF,GAAOF,YAAa,EAC7BI,EAASF,GAAOF,YAAa,EAElClB,EAASsB,GAyC2CiB,CAAenB,IAAzD,SACGT,EAAKO,WACJ,qCACE,cAAC,IAAD,CAAiBkB,KAAMI,MACvB,sBAAMf,UAAU,YAAhB,SAA6Bd,EAAKI,cAGpC,qCACE,cAAC,IAAD,CAAiBqB,KAAMK,MACvB,+BAAO9B,EAAKI,gBAIlB,sBAAKU,UAAU,WAAf,UACE,iCACE,cAAC,IAAD,CACEU,QAAS,kBAAMhB,EAAmBC,GAAO,IACzCgB,KAAMM,QAGV,+BAAO/B,EAAKC,WACZ,iCACE,cAAC,IAAD,CACEuB,QAAS,kBAAMhB,EAAmBC,IAClCgB,KAAMO,aAzBd,UAAahC,EAAKI,SAAlB,YAA8BK,SAgClC,sBAAKK,UAAU,QAAf,oBAA+BjB,WC1HvCoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAAS2C,eAAe,W","file":"static/js/main.179a61fc.chunk.js","sourcesContent":["import \"../styles/App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n  faCircle,\n  faCheckCircle,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const savedShoppingList = localStorage.getItem(\"shoppingList\");\n  const [items, setItems] = useState(\n    savedShoppingList ? JSON.parse(savedShoppingList) : []\n  );\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  useEffect(() => {\n    document.title = \"My shopping list\";\n    localStorage.setItem(\"shoppingList\", JSON.stringify(items));\n  });\n\n  const total = items.reduce((acc, item) => acc + item.quantity, 0);\n\n  const handleNewItems = () => {\n    if (inputValue) {\n      if (!items.find(({ itemName }) => itemName === inputValue)) {\n        const newItem = {\n          itemName: inputValue,\n          isSelected: false,\n          quantity: 1,\n        };\n        setItems([...items, newItem]);\n      } else {\n        alert(\"Cette élément existe déjà dans la liste :-)\");\n      }\n    }\n  };\n\n  const handleKeyEvent = (event) => {\n    if (event.key === \"Enter\") {\n      handleNewItems();\n    }\n  };\n\n  const toggleSelected = (index) => {\n    const newItems = [...items];\n\n    newItems[index].isSelected\n      ? (newItems[index].isSelected = false)\n      : (newItems[index].isSelected = true);\n\n    setItems(newItems);\n  };\n\n  const handleItemQuantity = (index, increase = true) => {\n    const newItems = [...items];\n\n    if (!increase) {\n      if (newItems[index].quantity - 1 <= 0) {\n        const itemsWithoutCurrentIndex = items.filter(\n          (item) => item.itemName !== newItems[index].itemName\n        );\n\n        setItems(itemsWithoutCurrentIndex);\n        return;\n      } else {\n        newItems[index].quantity--;\n      }\n    } else {\n      newItems[index].quantity++;\n    }\n    setItems(newItems);\n  };\n\n  return (\n    <div className=\"app-background\">\n      <div className=\"main-container\">\n        <div className=\"add-item-box\">\n          <input\n            onChange={(event) => setInputValue(event.target.value)}\n            onKeyPress={(event) => handleKeyEvent(event)}\n            className=\"add-item-input\"\n            placeholder=\"Truc a acheter\"\n            maxLength=\"15\"\n          />\n          <button onClick={handleNewItems}>\n            <FontAwesomeIcon icon={faPlus} />\n          </button>\n        </div>\n        <div className=\"item-list\">\n          {items.map((item, index) => (\n            <div key={`${item.itemName}-${index}`} className=\"item-container\">\n              <div className=\"item-name\" onClick={() => toggleSelected(index)}>\n                {item.isSelected ? (\n                  <>\n                    <FontAwesomeIcon icon={faCheckCircle} />\n                    <span className=\"completed\">{item.itemName}</span>\n                  </>\n                ) : (\n                  <>\n                    <FontAwesomeIcon icon={faCircle} />\n                    <span>{item.itemName}</span>\n                  </>\n                )}\n              </div>\n              <div className=\"quantity\">\n                <button>\n                  <FontAwesomeIcon\n                    onClick={() => handleItemQuantity(index, false)}\n                    icon={faChevronLeft}\n                  />\n                </button>\n                <span>{item.quantity}</span>\n                <button>\n                  <FontAwesomeIcon\n                    onClick={() => handleItemQuantity(index)}\n                    icon={faChevronRight}\n                  />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"total\">Total: {total}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}